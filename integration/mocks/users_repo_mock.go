// Code generated by MockGen. DO NOT EDIT.
// Source: go-tests/integration (interfaces: UsersRepo)
//
// Generated by this command:
//
//	mockgen -destination=mocks/users_repo_mock.go -package=mocks go-tests/integration UsersRepo
//

// Package mocks is a generated GoMock package.
package mocks

import (
	integration "go-tests/integration"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockUsersRepo is a mock of UsersRepo interface.
type MockUsersRepo struct {
	ctrl     *gomock.Controller
	recorder *MockUsersRepoMockRecorder
}

// MockUsersRepoMockRecorder is the mock recorder for MockUsersRepo.
type MockUsersRepoMockRecorder struct {
	mock *MockUsersRepo
}

// NewMockUsersRepo creates a new mock instance.
func NewMockUsersRepo(ctrl *gomock.Controller) *MockUsersRepo {
	mock := &MockUsersRepo{ctrl: ctrl}
	mock.recorder = &MockUsersRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUsersRepo) EXPECT() *MockUsersRepoMockRecorder {
	return m.recorder
}

// CreateUsers mocks base method.
func (m *MockUsersRepo) CreateUsers(arg0 []integration.User) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUsers", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateUsers indicates an expected call of CreateUsers.
func (mr *MockUsersRepoMockRecorder) CreateUsers(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUsers", reflect.TypeOf((*MockUsersRepo)(nil).CreateUsers), arg0)
}

// FindAllUsers mocks base method.
func (m *MockUsersRepo) FindAllUsers() ([]integration.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindAllUsers")
	ret0, _ := ret[0].([]integration.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindAllUsers indicates an expected call of FindAllUsers.
func (mr *MockUsersRepoMockRecorder) FindAllUsers() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindAllUsers", reflect.TypeOf((*MockUsersRepo)(nil).FindAllUsers))
}
